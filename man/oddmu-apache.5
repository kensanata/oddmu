.\" Generated by scdoc 1.11.2
.\" Complete documentation for this program is not available as a GNU info page
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.nh
.ad l
.\" Begin generated content:
.TH "ODDMU-APACHE" "5" "2024-02-14"
.PP
.SH NAME
.PP
oddmu-apache - how to setup Apache as a reverse proxy for Oddmu
.PP
.SS DESCRIPTION
.PP
The oddmu program serves the current working directory as a wiki on port 8080.\&
This is an unpriviledged port so an ordinary user account can do this.\&
Alternatively, you can reverse proxy HTTP over a Unix-domain socket,
as shown later.\&
.PP
The best way to protect the wiki against vandalism and spam is to use a regular
web server as reverse proxy.\& This page explains how to setup Apache on Debian to
do this.\&
.PP
.SS CONFIGURATION
.PP
HTTPS is not part of Oddmu.\& You probably want to configure this in your
webserver.\& I guess you could use stunnel, too.\& If you'\&re using Apache, you can
use "mod_md" to manage your domain.\&
.PP
The examples below use the domain "transjovian.\&org" and the Apache installation
is the one that comes with Debian.\&
.PP
The site itself is configured in a file called
"/etc/apache2/sites-available/transjovian.\&conf" and a link points there from
"/etc/apache2/sites-enabled".\& Create this link using \fIa2ensite\fR(1).\&
.PP
.nf
.RS 4
MDomain transjovian\&.org
MDCertificateAgreement accepted
ServerAdmin alex@alexschroeder\&.ch

<VirtualHost *:80>
  ServerName transjovian\&.org
  Redirect "/" "https://transjovian\&.org/"
</VirtualHost>
<VirtualHost *:443>
  ServerName transjovian\&.org
  SSLEngine on
  ProxyPassMatch "^/((view|diff|edit|save|add|append|upload|drop|search|archive)/(\&.*))?$" 
                 "http://localhost:8080/$1"
</VirtualHost>
.fi
.RE
.PP
First, it manages the domain, getting the necessary certificates.\& It redirects
regular HTTP traffic from port 80 to port 443.\& It turns on the SSL engine for
port 443.\& It proxies the requests for Oddmu to port 8080.\& Importantly, it
doesn'\&t send \fIall\fR the requests to Oddmu.\& This allows us to still host static
files using the web server (see \fBServe static files\fR).\&
.PP
This is what happens:
.PP
.PD 0
.IP \(bu 4
The user tells the browser to visit "transjovian.\&org"
.IP \(bu 4
The browser sends a request for "http://transjovian.\&org" (on port 80)
.IP \(bu 4
Apache redirects this to "https://transjovian.\&org/" by default (now on port 443)
.IP \(bu 4
This is proxied to "http://transjovian.\&org:8080/" (now on port 8080)
.PD
.PP
Restart the server, gracefully:
.PP
.nf
.RS 4
apachectl graceful
.fi
.RE
.PP
In a situation where Apache acts as a reverse proxy, you can prevent some
actions from being proxied.\& If you don'\&t want to allow strangers to make
changes, search or archive the site, use a limited setup like the following:
.PP
.nf
.RS 4
MDomain transjovian\&.org
MDCertificateAgreement accepted
ServerAdmin alex@alexschroeder\&.ch

<VirtualHost *:80>
  ServerName transjovian\&.org
  Redirect "/" "https://transjovian\&.org/"
</VirtualHost>
<VirtualHost *:443>
  ServerName transjovian\&.org
  SSLEngine on
  ProxyPassMatch "^/(view/\&.*)?$" "http://localhost:8080/$1"
</VirtualHost>
.fi
.RE
.PP
You'\&ll need to edit the source pages some other way.\& Edit them locally and
upload them using rsync; edit them remotely using an editor that can do this;
use SSHFS to mount the remote directory locally for editing; use \fIstunnel\fR(8) to
access the remote wiki on the local port 8080 for editing.\& There are probably a
lot more such options available.\& All of them have the drawback that they'\&re
probably not easy to use when on a mobile phone.\&
.PP
.SS Allow HTTP for viewing
.PP
When looking at pages, you might want to allow HTTP since no password is
required.\& Therefore, proxy the read-only requests from the virtual host on port
80 to the wiki instead of redirecting them to port 443.\&
.PP
.nf
.RS 4
MDomain transjovian\&.org
MDCertificateAgreement accepted
ServerAdmin alex@alexschroeder\&.ch

<VirtualHost *:80>
  ServerName transjovian\&.org
  ProxyPassMatch "^/((view|diff|search|archive)/(\&.*))?$" 
                 "http://localhost:8080/$1"
  RedirectMatch  "^/((edit|save|add|append|upload|drop)/(\&.*))?$" 
                 "https://transjovian\&.org/$1"
</VirtualHost>
<VirtualHost *:443>
  ServerName transjovian\&.org
  SSLEngine on
  ProxyPassMatch "^/((view|diff|edit|save|add|append|upload|drop|search|archive)/(\&.*))?$" 
                 "http://localhost:8080/$1"
</VirtualHost>
.fi
.RE
.PP
.SS Using a Unix-domain Socket
.PP
Instead of having Oddmu listen on a TCP port, you can have it listen on a
Unix-domain socket.\& This requires socket activation.\& An example of configuring
the service is given in \fIoddmu.\&service(5)\fR.\&
.PP
To test just the unix domain socket, use \fIncat(1)\fR:
.PP
.nf
.RS 4
echo -e "GET /view/index HTTP/1\&.1rnHost: localhostrnrn" 
  | ncat --unixsock /run/oddmu/oddmu\&.sock
.fi
.RE
.PP
On the Apache side, you can proxy to the socket directly.\& This sends all
requests to the socket:
.PP
.nf
.RS 4
ProxyPass "/" "unix:/run/oddmu/oddmu\&.sock|http://localhost/"
.fi
.RE
.PP
Now, all traffic between the web server and the wiki goes over the socket at
"/run/oddmu/oddmu.\&sock".\&
.PP
To test it on the command-line, use a tool like \fIcurl(1)\fR.\& Make sure to provide
the correct servername!\&
.PP
.nf
.RS 4
curl http://transjovian\&.org/view/index
.fi
.RE
.PP
You probably want to serve some static files as well (see \fBServe static files\fR).\&
In that case, you need to use the ProxyPassMatch directive.\&
.PP
.nf
.RS 4
ProxyPassMatch "^/((view|diff|edit|save|add|append|upload|drop|search|archive)/(\&.*))?$" 
               "unix:/run/oddmu/oddmu\&.sock|http://localhost/$1"
.fi
.RE
.PP
There'\&s a curious problem with this expression, however.\& If you use \fIcurl(1)\fR to
get the root path, Apache hangs:
.PP
.nf
.RS 4
curl http://transjovian\&.org/
.fi
.RE
.PP
A workaround is to add the redirect manually and drop the question-mark:
.PP
.nf
.RS 4
RedirectMatch "^/$" "/view/index"
ProxyPassMatch "^/((view|diff|edit|save|add|append|upload|drop|search|archive)/(\&.*))$" 
               "unix:/run/oddmu/oddmu\&.sock|http://localhost/$1"
.fi
.RE
.PP
If you know why this is happening, let me know.\&
.PP
.SS Access
.PP
Access control is not part of Oddmu.\& By default, the wiki is editable by all.\&
This is most likely not what you want unless you'\&re running it stand-alone,
unconnected to the Internet â€“ a personal memex on your laptop, for example.\&
.PP
The following instructions create user accounts with passwords just for Oddmu.\&
These users are not real users on the web server and don'\&t have access to a
shell, mail, or any other service.\&
.PP
Create a new password file called ".\&htpasswd" and add the user "alex".\& The "-c"
flag creates the file.\&
.PP
.nf
.RS 4
cd /home/oddmu
htpasswd -c \&.htpasswd alex
.fi
.RE
.PP
To add more users, don'\&t use the "-c" option or you will overwrite the existing
file.\& To add another user, use no option at all.\&
.PP
.nf
.RS 4
htpasswd \&.htpasswd berta
.fi
.RE
.PP
To remove a user, use the "-D" option.\&
.PP
.nf
.RS 4
htpasswd -D \&.htpasswd berta
.fi
.RE
.PP
Modify your site configuration and protect the "/edit/", "/save/", "/add/",
"/append/", "/upload/" and "/drop/" URLs with a password by adding the following
to your "<VirtualHost *:443>" section:
.PP
.nf
.RS 4
<LocationMatch "^/(edit|save|add|append|upload|drop)/">
  AuthType Basic
  AuthName "Password Required"
  AuthUserFile /home/oddmu/\&.htpasswd
  Require valid-user
</LocationMatch>
.fi
.RE
.PP
The way Oddmu handles subdirectories is that all files and directories are
visible, except for "hidden" files and directories (whose name starts with a
period).\& Specifically, do not rely on Apache to hide locations in subdirectories
from public view.\& Search reveals the existence of these pages and produces an
extract, even if users cannot follow the links.\& Archive links pack all the
subdirectories, including locations you may have hidden from view using Apache.\&
.PP
If you want private subdirectories, you need to set the environment variable
ODDMU_FILTER to a regular expression matching the private directories.\& If search
starts in a directory matching the regular expression, the directory and its
subdirectories are searched.\& If search starts in a directory that doesn'\&t match
the regular expression, all directories matching the regular expression are
excluded.\&
.PP
In the following example, ODDMU_FILTER is set to "^secret/".\&
.PP
http://transjovian.\&org/search/index?\&q=something does not search the "secret"
directory and its subdirectories are excluded.\&
.PP
http://transjovian.\&org/search/secret/index?\&q=something searches just the
"secret" directory and its subdirectories.\&
.PP
Now you need to ensure that the "secret" directory are not public.\&
.PP
.nf
.RS 4
<LocationMatch "^/(edit|save|add|append|upload|drop|view/secret|search/secret)/">
  AuthType Basic
  AuthName "Password Required"
  AuthUserFile /home/oddmu/\&.htpasswd
  Require valid-user
</LocationMatch>
.fi
.RE
.PP
.SS Serve static files
.PP
If you want to serve static files as well, add a document root to your webserver
configuration.\& In this case, the document root is the directory where all the
data files are.\& Apache does not serve files such as ".\&htpasswd".\&
.PP
.nf
.RS 4
DocumentRoot /home/oddmu
<Directory /home/oddmu>
  Require all granted
</Directory>
.fi
.RE
.PP
Make sure that none of the subdirectories look like the wiki paths "/view/",
"/diff/", "/edit/", "/save/", "/add/", "/append/", "/upload/", "/drop/",
"/search/" or "/archive/".\& For example, create a file called "robots.\&txt"
containing the following, telling all robots that they'\&re not welcome.\&
.PP
.nf
.RS 4
User-agent: *
Disallow: /
.fi
.RE
.PP
Your site now serves "/robots.\&txt" without interfering with the wiki, and
without needing a wiki page.\&
.PP
Another option would be to create a CSS file and use it with a <link> element in
all the templates instead of relying on the <style> element.\&
.PP
The "view.\&html" template would start as follows:
.PP
.nf
.RS 4
<!DOCTYPE html>
<html lang="{{\&.Language}}">
  <head>
    <meta charset="utf-8">
    <meta name="format-detection" content="telephone=no">
    <meta name="viewport" content="width=device-width">
    <title>{{\&.Title}}</title>
    <link href="/css/oddmu-2023\&.css" rel="stylesheet" />
    <link rel="alternate" type="application/rss+xml" title="Alex Schroeder: {{\&.Title}}" href="/view/{{\&.Name}}\&.rss" />
  </head>
â€¦
.fi
.RE
.PP
In this case, "/css/oddmu-2023.\&css" would be the name of your stylesheet.\& If
your document root is "/home/oddmu", then the filename of your stylesheet would
have to be "/home/oddmu/css/oddmu-2023.\&css" for this to work.\&
.PP
.SS Different logins for different access rights
.PP
What if you have a site with various subdirectories and each subdirectory is for
a different group of friends?\& You can set this up using your webserver.\& One way
to do this is to require specific usernames (which must have a password in the
password file mentioned above.\&
.PP
This requires a valid login by the user "alex" or "berta":
.PP
.nf
.RS 4
<LocationMatch "^/(edit|save|add|append|upload|drop)/intetebi/">
  Require user alex berta
</LocationMatch>
.fi
.RE
.PP
.SS Private wikis
.PP
Based on the above, you can prevent people from \fIreading\fR the wiki.\& The
"LocationMatch" must cover all the URLs in order to protect everything.\&
.PP
.nf
.RS 4
<Location />
  AuthType Basic
  AuthName "Password Required"
  AuthUserFile /home/oddmu/\&.htpasswd
  Require valid-user
</Location>
.fi
.RE
.PP
.SS Virtual hosting
.PP
Virtual hosting in this context means that the program serves two different
sites for two different domains from the same machine.\& Oddmu doesn'\&t support
that, but your webserver does.\& Therefore, start an Oddmu instance for every
domain name, each listening on a different port.\& Then set up your web server
such that ever domain acts as a reverse proxy to a different Oddmu instance.\&
.PP
.SH SEE ALSO
.PP
\fIoddmu\fR(1)
.PP
"Apache Core Features".\&
https://httpd.\&apache.\&org/docs/current/mod/core.\&html
.PP
"Apache: Authentication and Authorization".\&
https://httpd.\&apache.\&org/docs/current/howto/auth.\&html
.PP
"Apache Module mod_proxy".\&
https://httpd.\&apache.\&org/docs/current/mod/mod_proxy.\&html
.PP
"Robot exclusion standard" on Wikipedia.\&
https://en.\&wikipedia.\&org/wiki/Robot_exclusion_standard
.PP
"<style>: The Style Information element"
https://developer.\&mozilla.\&org/en-US/docs/Web/HTML/Element/style
.PP
"<link>: The External Resource Link element"
https://developer.\&mozilla.\&org/en-US/docs/Web/HTML/Element/link
.PP
.SH AUTHORS
.PP
Maintained by Alex Schroeder <alex@gnu.\&org>.\&
