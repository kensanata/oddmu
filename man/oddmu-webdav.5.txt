ODDMU-WEBDAV(5)

# NAME

oddmu-webdav - how to setup Web-DAV using Apache for Oddmu

# DESCRIPTION

With the Apache Web-DAV module enabled, users can mount the wiki as a remote
file system and manage the files using some other tool. Using the Apache Web-DAV
module means that the same user accounts can be used as for the regular wiki.

# CONFIGURATION

Consider the "campaignwiki.org" site in the example below. This site offers
users their own wikis. Thus:

"https://campaignwiki.org/" is a regular website with static files.

"https://campaignwiki.org/view/index" is one of the requests that gets passed to
a Unix domain socket. See "Socket Activation" in _oddmu_(1).

Some of these actions are protected by basic authentication. A valid user is
required to make changes to the site. Valid users are "admin" and "alex".

"data" is the Oddmu working directory. WebDAV is turned on for this directory. A
shortcut has been taken, here: The "data" subdirectory requires authentication
and offers WebDAV access. The other paths also require authentication and map to
Oddmu actions. The fact that WebDAV access is "enabled" for the Oddmu actions
has no effect. The only drawback is that "https://campaignwiki.org/data/" now
requires authentication even if only used for reading.

"https://campaignwiki.org/view/knochentanz/index" is a separate site called
"knochentanz". The only valid user is "knochentanz".

Notice how the _archive_ action is not available at the top level, only for
subdirectories.

```
MDomain campaignwiki.org

<VirtualHost *:80>
    ServerName campaignwiki.org
    Redirect permanent / https://campaignwiki.org/
</VirtualHost>

<VirtualHost *:443>
    ServerAdmin alex@campaignwiki.org
    ServerName campaignwiki.org
    # Static HTML, CSS, JavaScript files and so on are saved here.
    DocumentRoot /home/alex/campaignwiki.org
    <Directory /home/alex/campaignwiki.org>
        Options Indexes MultiViews SymLinksIfOwnerMatch
        AllowOverride All
        Require all granted
    </Directory>
    SSLEngine on
    # Any request to the following paths is passed on to the Unix domain socket.
    ProxyPassMatch \
      "^/((view|preview|diff|edit|save|add|append|upload|drop|search|archive/.+)/(.*))$" \
      "unix:/home/oddmu/campaignwiki.sock|http://localhost/$1"
    # /archive only for subdirectories
    Redirect "/archive/data.zip" "/view/archive"
    # Making changes to the wiki requires authentication.
    <LocationMatch "^/(data|edit|preview|save|add|append|upload|drop)/">
      AuthType Basic
      AuthName "Password Required"
      AuthUserFile /home/oddmu/.htpasswd
      Require user admin alex
      Dav On
    </LocationMatch>
    # Making changes to a subdirectory requires different accounts.
    <LocationMatch "^/(data|edit|preview|save|add|append|upload|drop|archive)/knochentanz">
      Require user knochentanz
    </LocationMatch>
</VirtualHost>
```

In order for this to work, you must enable the mod_dav_fs module. This
automatically enables to the mod_dav module, too. Restart the server after
installing enabling a module.

```
sudo a2enmod mod_dav_fs
sudo apachectl restart
```

Check the permissions for the data directory. If the Oddmu service uses the
"oddmu" user and Apache uses the "www-data" user, you could add the data
directory to the "www-data" group and give it write permissions:

```
sudo chown oddmu:www-data /home/alex/campaignwiki.org/data/knochentanz
sudo chmod g+w /home/alex/campaignwiki.org/data/knochentanz
```

# EXAMPLES

Web-DAV clients are often implemented such that they only work with servers that
exactly match their assumptions. If you're trying to use _gvfs_(7), the Windows
File Explorer or the macOS Finder to edit Oddmu pages using Web-DAV, you're on
your own. Sometimes it works. I've used Nemo 5.6.4 to connect to the server and
edited files using gedit 44.2. But I've used other file managers and other
editors with WebDAV support and they didn't work very well.

On Windows, try third party tools like WinSCP.

This section has examples sessions using command-line tools that work.

## cadaver

Here's how to use _cadaver_(1). The "edit" command uses the editor specified in
the EDITOR environment variable. In this example, that's
"emacsclient --alternate-editor= ".

```
cadaver https://campaignwiki.org/data/knochentanz/
Authentication required for Password Required on server `campaignwiki.org':
Username: knochentanz
Password: 
dav:/data/knochentanz/> edit index.md
Locking `index.md': succeeded.
Downloading `/data/knochentanz/index.md' to /tmp/cadaver-edit-fHTllt.md
Progress: [=============================>] 100.0% of 2725 bytes succeeded.
Running editor: `emacsclient --alternate-editor= /tmp/cadaver-edit-fHTllt.md'...
Waiting for Emacs...
Changes were made.
Uploading changes to `/data/knochentanz/index.md'
Progress: [=============================>] 100.0% of 2726 bytes succeeded.
Unlocking `index.md': succeeded.
```

## curl and hdav

Here's how to use _curl_(1) to get the file from the public "/view" location and
how to use _hdav_(1) to put the file to the protected "/data" location. In this
example, _ed_(1) is used to append the word "test" to the file.

```
alex@melanobombus ~> curl --output index.md https://campaignwiki.org/view/knochentanz/index.md
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  2726  100  2726    0     0  36662      0 --:--:-- --:--:-- --:--:-- 37861
alex@melanobombus ~> ed index.md 
2726
a
test
.
w
2731
q
alex@melanobombus ~> hdav put index.md https://campaignwiki.org/data/knochentanz/index.md --username knochentanz
hDAV version 1.3.4, Copyright (C) 2012-2016  Clint Adams
hDAV comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions.

Password for knochentanz at URL https://campaignwiki.org/data/knochentanz/index.md: ********
```

## davfs2

Here's how to use _davfs2_(1) using _mount_(1). Now the whole wiki is mounted
and can be edited like local files. In this example, _echo_(1) and redirection
is used to append the word "test" to a file.

```
alex@melanobombus ~> mkdir knochentanz
alex@melanobombus ~> sudo mount -t davfs -o username=knochentanz,uid=alex \
    https://campaignwiki.org/data/knochentanz/ knochentanz/
  Password:  ********
alex@melanobombus ~> echo test >> knochentanz/index.md
```

# SEE ALSO

_oddmu_(1), _oddmu-apache_(5)

"Apache Module mod_dav".
https://httpd.apache.org/docs/current/mod/mod_dav.html

"WinSCP"
https://winscp.net/

# AUTHORS

Maintained by Alex Schroeder <alex@gnu.org>.
