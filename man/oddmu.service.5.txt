ODDMU.SERVICE(5)

# NAME

oddmu.service - how to setup Oddmu using systemd

## DESCRIPTION

Here's how to setup a wiki using systemd such that it starts automatically when
the system boots and gets restarted automatically when it crashes.

First, create a new user called "oddmu" with it's own home directory but without
a login.

```
adduser --system --home /home/oddmu oddmu
```

The directory "/home/oddmu" contains the templates and all the data files. Copy
all the templates files ending in ".html" from the source distribution to
"/home/oddmu".

If you want to keep everything in one place, copy the binary "oddmu" and the
service file "oddmu.service" to "/home/oddmu", too.

Edit the "oddmu.service" file. These are the lines you most likely have to take
care of:

```
ExecStart=/home/oddmu/oddmu
WorkingDirectory=/home/oddmu
ReadWritePaths=/home/oddmu
Environment="ODDMU_PORT=8080"
Environment="ODDMU_WEBFINGER=1"
```

Install the service file and enable it:

```
ln -s /home/oddmu/oddmu.service /etc/systemd/system/
systemctl enable --now oddmu
```

You should be able to visit the wiki at http://localhost:8080/.

Check the log:

```
journalctl --unit oddmu
```

Follow the log:

```
journalctl --follow --unit oddmu
```

# Socket Activation

Alternatively, you can let systemd handle the creation of the listening socket,
passing it to Oddmu. See "oddmu-unix-domain.service" and
"oddmu-unix-domain.socket" for a fully worked example of how to do this with a
Unix domain socket. Take note of "Accept=no" in the .socket file and
"StandardInput=socket" in the .service file. The option "StandardInput=socket"
tells systemd to pass the socket to the service as its standard input.
"Accept=no" tells systemd to pass a listening socket, rather than to try calling
Oddmu for each connection.

Instead of using "oddmu.service", you need to use "oddmu-unix-domain.socket" and
"oddmu-unix-domain.service".

The unit file for the socket defines a file name. You probably need to create
the directory or change the file name.

```
sudo mkdir /run/oddmu
```

The unit file for the service defines where the "oddmu" is and where the data
directory is. These are the lines you most likely have to take care of:

```
ExecStart=/home/oddmu/oddmu
WorkingDirectory=/home/oddmu
ReadWritePaths=/home/oddmu
Environment="ODDMU_PORT=8080"
Environment="ODDMU_WEBFINGER=1"
```

To install, enable and start both units:

```
ln -s /home/oddmu/oddmu-unix-domain.socket /etc/systemd/system
ln -s /home/oddmu/oddmu-unix-domain.service /etc/systemd/system
systemctl enable --now oddmu-unix-domain.socket
systemctl enable --now oddmu-unix-domain.service
```

To test just the unix domain socket, use _ncat(1)_:

```
echo -e "GET /view/index HTTP/1.1\r\nHost: localhost\r\n\r\n" \
  | ncat --unixsock /run/oddmu/oddmu.sock
```

Now you need to set up your web browser to use the Unix domain socket. See
_oddmu-apache_(5) or _oddmu-nginx_(5) for example configurations.

# SEE ALSO

_oddmu_(1), _oddmu-apache_(5), _oddmu-nginx_(5), _systemd.exec_(5),
_systemd.socket(5), _capabilities_(7)

# AUTHORS

Maintained by Alex Schroeder <alex@gnu.org>.
