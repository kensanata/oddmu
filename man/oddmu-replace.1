.\" Generated by scdoc 1.11.3
.\" Complete documentation for this program is not available as a GNU info page
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.nh
.ad l
.\" Begin generated content:
.TH "ODDMU-REPLACE" "1" "2025-03-05"
.PP
.SH NAME
.PP
oddmu-replace - replace text in Oddmu pages
.PP
.SH SYNOPSIS
.PP
\fBoddmu replace\fR [-confirm] [-regexp] \fIterm\fR \fIreplacement\fR
.PP
.SH DESCRIPTION
.PP
The "replace" subcommand does a search and replace on all the Markdown files in
the current directory and its subdirectories.\&
.PP
.SH OPTIONS
.PP
\fB-confirm\fR
.RS 4
By default, the replacement doesn'\&t save the changes made.\& Instead, a
unified diff is produced and printed.\& Given this option, the changed
Markdown files are saved to disk.\&
.PP
.RE
\fB-regexp\fR
.RS 4
By default, the term to be replaced is just a string.\& With this flag,
the term is a regular expression and the replacement can contain
backreferences ($1, $2, $3, etc.\&) to capture groups.\&
.PP
.RE
.SH EXAMPLES
.PP
Replace "Oddmu" in the Markdown files of the current directory:
.PP
.nf
.RS 4
oddmu replace Oddmu OddÎ¼
.fi
.RE
.PP
Result:
.PP
.nf
.RS 4
--- README\&.md~
+++ README\&.md

(diff omitted)

1 file would be changed\&.
This is a dry run\&. Use -confirm to make it happen\&.
.fi
.RE
.PP
.SH NOTES
.PP
This is the equivalent of using \fIsed\fR(1) with the --quiet, --regexp-extended,
--in-place=~ and --expression command with the s command
"s/regexp/replacement/g" except that it prints a unified diff per default
instead of making any changes and the regexp rules differ slightly.\&
.PP
The search is case-sensitive.\& To make it case-insensitive, search for a regular
expression that sets the case-insensitive flag, e.\&g.\& "(?\&i)oddmu".\&
.PP
.SH SECURITY
.PP
Consider creating a backup before doing replacements!\&
.PP
The following Bash script creates a copy of the current directory using hard
links.\& If you'\&re in a directory called "wiki", it creates a sibling directory
called "wiki-2023-11-24" (using the current date) full of links.\& This takes
little space and time.\& It works as a backup as long as you don'\&t use an
application that edits files in place.\& Most programs overwrite old files by
creating new files with the same name, so you should be safe.\&
.PP
.nf
.RS 4
#!/usr/bin/bash
d=$(basename $(pwd))
t=$(date --iso-8601)
echo Creating a snapshot of $d in \&.\&./$d-$t
rsync --link-dest "\&.\&./$d" --archive \&. "\&.\&./$d-$t/"
.fi
.RE
.PP
The above wouldn'\&t work for database files, for example.\& There, the database
changes the file in place thus the file is changed in the backup directory as
well.\& For Oddmu and the usual text editors, it works.\& If you use Emacs, don'\&t
set \fIbackup-by-copying\fR, \fIbackup-by-copying-when-linked\fR and related variables.\&
.PP
.SH SEE ALSO
.PP
\fIoddmu\fR(1), \fIoddmu-search\fR(7)
.PP
.SH AUTHORS
.PP
Maintained by Alex Schroeder <alex@gnu.\&org>.\&
